print_hex:
    ; Вход: rdi - число для вывода в шестнадцатеричном формате
    ; Используем стек для сохранения регистров
    push rax
    push rcx
    push rdx

    mov rax, rdi        ; Число для вывода
    mov rcx, 16         ; Количество цифр в шестнадцатеричном числе

.loop:
    shl rax, 4          ; Сдвиг влево на 4 бита
    and rax, 0xF000000000000000 ; Изолируем старшие 4 бита
    shr rax, 60         ; Сдвиг вправо на 60 бит для получения значения 0-15
    mov dl, [codes + rax] ; Получаем символ из массива codes
    mov rsi, rsp        ; Указатель на символ
    mov [rsp], dl       ; Помещаем символ в стек
    mov rdx, 1          ; Длина данных для записи (1 байт)
    mov rax, 1          ; Системный вызов для записи (sys_write)
    mov rdi, 1          ; Дескриптор файла для stdout
    syscall

    loop .loop

    ; Восстановление регистров
    pop rdx
    pop rcx
    pop rax
    ret